head	1.2;
access;
symbols
	Initial:1.1;
locks; strict;
comment	@# @;


1.2
date	96.02.06.03.39.22;	author agray;	state Exp;
branches;
next	1.1;

1.1
date	96.02.06.03.35.51;	author agray;	state Exp;
branches;
next	;


desc
@General information on the Data Analysis Library.
AG
@


1.2
log
@formatting.
AG
@
text
@Data Analysis Library
=====================

# $Id: README,v 1.1 1996/02/06 03:35:51 agray Exp agray $
# $Log: README,v $
# Revision 1.1  1996/02/06  03:35:51  agray
# Initial revision
#

This is library of routines which use the Numerical Recipes structures and
style, and are meant for use with the NR Library (as of 2nd edition).

The philosophy here is to be as simple as possible without being unclear.

Started: 2/5/96 AG


MODULES:

da_linalg.c
-----------
A layer that sits lightly on top of the NR Library routines, that allow 
convenient expression of common linear algebra concepts that are not available 
in NR.

da_stat.c
----------
Some statistical routines of possibly general interest.


NOTES:

In the Numerical Recipes world, all indices for vectors and matrices start at 
1, not 0, so be careful.

The Numerical Recipes Library uses a particular layout for allocation of 
matrices.  Use the functions vector() and matrix() to allocate, and corres-
pondingly, free_vector() and free_matrix() to deallocate.  The data type float
is assumed as the basic type.  Other types have corresponding vector and
matrix memory allocation/deallocation functions.


UPDATING THE LIBRARY:

After making changes/additions to the library, it is good practice to make a
test driver program to exercise the changes/additions as well as illustrate
the proper use of new functions.  These can be put in the main test driver
test-lib.c or in a more specific .c (if desired) in the test directory.  The
file test-lib.c is also good to look at to see the conventions and common
usage of the library when using it for the first time.
@


1.1
log
@Initial revision
@
text
@d3 6
a8 2
$Id$
$Log$
@
