head	1.4;
access;
symbols;
locks
	granat:1.4; strict;
comment	@ * @;


1.4
date	97.01.29.21.39.34;	author agray;	state Exp;
branches;
next	1.3;

1.3
date	96.10.31.02.20.44;	author agray;	state Exp;
branches;
next	1.2;

1.2
date	96.09.13.01.23.49;	author agray;	state Exp;
branches;
next	1.1;

1.1
date	96.07.19.18.00.02;	author agray;	state Exp;
branches;
next	;


desc
@header file for da_dist_pp.c
@


1.4
log
@new format.
@
text
@/*******************************************************************************
MODULE HEADER:
da_signal_pp.h
*******************************************************************************/

#ifndef _DA_SIGNAL_PP_H_
#define _DA_SIGNAL_PP_H_
/* Protects from multiple inclusion. */

#ifndef lint
static char da_signal_pp_hdr_rcsid[] = "$Id: da_signal_pp.h,v 1.3 1996/10/31 02:20:44 agray Exp agray $";
#endif
/* This string variable allows the RCS identification info to be printed. */

/* 
 * $Log: da_signal_pp.h,v $
 * Revision 1.3  1996/10/31 02:20:44  agray
 * renamed from "da_dist_pp" to "da_signal_pp";
 * changed .h and .c formats throughout library;
 * some reorganizing between modules;
 *
 * Revision 1.2  1996/09/13 01:23:49  agray
 * changed name for normalize_data_pp().
 *
 * Revision 1.1  1996/07/19 18:00:02  agray
 * Initial revision
 *
 * */

/*==============================================================================
Data Structures
==============================================================================*/

/*==============================================================================
Constants, Macros
==============================================================================*/

/*==============================================================================
Variables
==============================================================================*/

/*==============================================================================
Function Declarations
==============================================================================*/

/* normalization of values by their range */

int range_normalize_cols_pp(float **mat, float *minval, float *maxval, 
                            float *range, int numrows, int numcols, int pe, 
                            int numPE);

#endif /* _DA_SIGNAL_PP_H_ */
@


1.3
log
@renamed from "da_dist_pp" to "da_signal_pp";
changed .h and .c formats throughout library;
some reorganizing between modules;
@
text
@d6 2
a7 2
#ifndef _DA_SIGNAL_PP_H
#define _DA_SIGNAL_PP_H
d11 1
a11 1
static char da_signal_pp_hdr_rcsid[] = "$Id: da_signal_pp.h,v 1.2 1996/09/13 01:23:49 agray Exp agray $";
d17 5
d30 1
a30 1
/*******************************************************************************
d32 1
a32 1
*******************************************************************************/
d34 1
a34 1
/*******************************************************************************
d36 5
a40 1
*******************************************************************************/
d42 1
a42 1
/*******************************************************************************
d44 1
a44 1
*******************************************************************************/
d52 1
a52 1
#endif
@


1.2
log
@changed name for normalize_data_pp().
@
text
@d1 8
a8 4
/* da_dist_pp.h */

#ifndef DA_DIST_PP_HDR
#define DA_DIST_PP_HDR
d11 1
a11 1
static char da_dist_pp_hdr_rcsid[] = "$Id: da_dist_pp.h,v 1.1 1996/07/19 18:00:02 agray Exp agray $";
d13 2
d16 4
a19 1
 * $Log: da_dist_pp.h,v $
d25 17
a41 15
/* constants */

/* function declarations */

#ifdef __STDC__

int range_normalize_mat_pp(float **mat, float *minval, float *maxval, 
                           float *range, int numrows, int numcols, int pe, 
                           int numPE);

#else 

int range_normalize_mat_pp();

#endif
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
static char da_dist_pp_hdr_rcsid[] = "$Id$";
d10 4
a13 1
 * $Log$
d22 3
a24 2
int normalize_data_pp(float **data, float *minval, float *maxval, float *range,
                      int numrows, int numcols, int pe, int numPE);
d28 1
a28 1
int normalize_data_pp();
@
