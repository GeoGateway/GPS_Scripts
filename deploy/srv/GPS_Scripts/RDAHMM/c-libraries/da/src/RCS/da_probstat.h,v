head	1.12;
access;
symbols;
locks
	granat:1.12; strict;
comment	@ * @;


1.12
date	97.09.10.14.55.38;	author granat;	state Exp;
branches;
next	1.11;

1.11
date	97.05.13.23.57.37;	author granat;	state Exp;
branches;
next	1.10;

1.10
date	97.05.06.22.49.38;	author granat;	state Exp;
branches;
next	1.9;

1.9
date	97.05.06.22.22.28;	author agray;	state Exp;
branches;
next	1.8;

1.8
date	97.02.24.22.59.57;	author granat;	state Exp;
branches;
next	1.7;

1.7
date	97.01.29.21.33.16;	author agray;	state Exp;
branches;
next	1.6;

1.6
date	96.10.31.02.18.27;	author agray;	state Exp;
branches;
next	1.5;

1.5
date	96.09.27.17.55.46;	author agray;	state Exp;
branches;
next	1.4;

1.4
date	96.09.20.22.13.43;	author agray;	state Exp;
branches;
next	1.3;

1.3
date	96.09.19.22.45.08;	author agray;	state Exp;
branches;
next	1.2;

1.2
date	96.07.11.18.27.02;	author agray;	state Exp;
branches;
next	1.1;

1.1
date	96.02.21.05.18.29;	author agray;	state Exp;
branches;
next	;


desc
@Header for da_prob.c.
ag
@


1.12
log
@added prototypes for routines to extend functionality to matrices of ints,
chars
@
text
@/*******************************************************************************
MODULE HEADER:
da_probstat.h
*******************************************************************************/

#ifndef _DA_PROBSTAT_H_
#define _DA_PROBSTAT_H_
/* Protects from multiple inclusion. */

#ifndef lint
static char da_probstat_h_rcsid[] = "$Id: da_probstat.h,v 1.11 1997/05/13 23:57:37 granat Exp granat $";
#endif
/* This string variable allows the RCS identification info to be printed. */

/* 
 * $Log: da_probstat.h,v $
 * Revision 1.11  1997/05/13 23:57:37  granat
 * added prototypes for mean_mat, stdev_mat, var_vec, var_mat
 * changed  name of mean to mean_vec, name of stdev to stdev_vec
 * changed order of input variables on some functions
 *
 * Revision 1.10  1997/05/06 22:49:38  granat
 * fixed interpolation prototypes
 *
 * Revision 1.9  1997/05/06 22:22:28  agray
 * added some things from dp cooltool.
 *
 * Revision 1.8  1997/02/24 22:59:57  granat
 * added prototypes for linint, vector_linint, vector_ratint, vector_polint
 *
 * Revision 1.7  1997/01/29 21:33:16  agray
 * new format.
 * also changed chop_data_equally() to partition_vector().
 *
 * Revision 1.6  1996/10/31 02:18:27  agray
 * renamed from "da_prob" to "da_probstat";
 * changed .h and .c formats throughout library;
 * some reorganizing between modules;
 * added some functions from HMM project.
 *
 * Revision 1.5  1996/09/27 17:55:46  agray
 * removed k&r prototypes so that this library can be linked with c++ code.
 *
 * Revision 1.4  1996/09/20 22:13:43  agray
 * changed names back.
 *
 * Revision 1.3  1996/09/19 22:45:08  agray
 * changed name of prob_gauss() to gauss_eval(); similar for vector_prob_gauss().
 *
 * Revision 1.2  1996/07/11 18:27:02  agray
 * added read/print/write_gauss_parms(), print/write_gauss_parms_set(),
 * print/write_unnorm_gauss_parms_set(), prob_gauss(), vector_prob_gauss().
 *
 * Revision 1.1  1996/02/21 05:18:29  agray
 * Initial revision
 * */

/*==============================================================================
Data Structures
==============================================================================*/

/*==============================================================================
Constants, Macros
==============================================================================*/

/*==============================================================================
Variables
==============================================================================*/

/*==============================================================================
Function Declarations
==============================================================================*/

/* basic statistics */

float mean_vec(float *v, int nc);
float mean_mat(float **m, int nr, int nc);
float mean_imat(int **m, int nr, int nc);
float mean_cmat(unsigned char **m, int nr, int nc);
float stdev_vec(float *v, int nc, float mean);
float stdev_mat(float **m, int nr, int nc, float mean);
float var_vec(float *v, int nc, float mean);
float var_mat(float **m, int nr, int nc, float mean);
int est_covar_mat(float **covar, float **data, float *mean, int num_data,
                  int num_dims);
int stats_of_cols(float **mat, float *means, float *stdevs, int numrows, 
                  int numcols);

/* pdf's of distributions */

float prob_gauss(float *datum, float *mean, float **covar, int dim, 
                 float min_diag);
float* vector_prob_gauss(float **data, float *mean, float **covar, int dim, 
                         int numdata, float *probs, float min_diag,
                         char *rows_or_cols);

float prob_mixture(float *datum, float **means, float ***covars, float *weights,
                   int dim, int num_comps, float min_diag);
float prob_mixture_and_keep(float *datum, float **means, float ***covars, 
                            float *weights, int dim, int num_comps, 
                            float min_diag, float *wgtd_probs);

/* random variables */

int generate_disc_rv_value(float *prob_symbol, int num_symbols, 
                           float *cum_prob_symbol);
int generate_mixture_rv_value(float *value, int num_dims, int num_comps, 
                              float **means, float ***covars, float *weights,
                              float *cum_prob_comps, float **chol_factor,
                              float *diag);
int generate_gaussian_rv_value(float *value, int num_dims, float *mean, 
                               float **covar, float **chol_factor, float *diag);

/* computations using distributions */

int merf(float *mean, float **cov, float **data, int nr, int nc, float *probs);

/* interpolation */

int linint( float *xa, float *ya, int n, float x, float *y, float slop );
int vector_linint( float *xa, float *ya, int n, float *x, float *y, int m,
                   float slop );
int vector_ratint(float *xa, float *ya, int n, float *x, float *y, int m);
int vector_polint(float *xa, float *ya, int n, float *x, float *y, int m);

/* polynomials */

int fit_line_to_data(float *data, float *index, int num_data, float *slope, 
                     float *intercept);
int compute_line(float *data, float *index, int num_data, float slope, 
                 float intercept);

/* histograms */

int partition_vector(float *data, float *start_values, int num_data,
                   int num_intervals);
int count_in_intervals(float *data, int *count, float *start_value,
                       int num_data, int num_buckets);


#endif /* _DA_PROBSTAT_H_ */
@


1.11
log
@added prototypes for mean_mat, stdev_mat, var_vec, var_mat
changed  name of mean to mean_vec, name of stdev to stdev_vec
changed order of input variables on some functions
@
text
@d11 1
a11 1
static char da_probstat_h_rcsid[] = "$Id: da_probstat.h,v 1.10 1997/05/06 22:49:38 granat Exp granat $";
d17 5
d78 2
@


1.10
log
@fixed interpolation prototypes
@
text
@d11 1
a11 1
static char da_probstat_h_rcsid[] = "$Id: da_probstat.h,v 1.9 1997/05/06 22:22:28 agray Exp granat $";
d17 3
d71 6
a76 2
float mean(int nc, float *v);
float stdev(int nc, float *v, float mean);
@


1.9
log
@added some things from dp cooltool.
@
text
@d11 1
a11 1
static char da_probstat_h_rcsid[] = "$Id: da_probstat.h,v 1.8 1997/02/24 22:59:57 granat Exp agray $";
d17 3
d110 1
a110 3

int find_extrema( float **extrema, int *minima_index, float **spectrum,
                  int spectrum_length, int *num_extr );
@


1.8
log
@added prototypes for linint, vector_linint, vector_ratint, vector_polint
@
text
@d11 1
a11 1
static char da_probstat_h_rcsid[] = "$Id: da_probstat.h,v 1.7 1997/01/29 21:33:16 agray Exp granat $";
d17 3
d69 2
a103 1

a105 1

@


1.7
log
@new format.
also changed chop_data_equally() to partition_vector().
@
text
@d11 1
a11 1
static char da_probstat_h_rcsid[] = "$Id: da_probstat.h,v 1.6 1996/10/31 02:18:27 agray Exp agray $";
d17 4
d95 12
@


1.6
log
@renamed from "da_prob" to "da_probstat";
changed .h and .c formats throughout library;
some reorganizing between modules;
added some functions from HMM project.
@
text
@d6 2
a7 2
#ifndef _DA_PROBSTAT_H
#define _DA_PROBSTAT_H
d11 1
a11 1
static char da_probstat_h_rcsid[] = "$Id: da_probstat.h,v 1.5 1996/09/27 17:55:46 agray Exp agray $";
d17 6
d40 1
a40 1
/*******************************************************************************
d42 1
a42 1
*******************************************************************************/
d44 1
a44 1
/*******************************************************************************
d46 5
a50 1
*******************************************************************************/
d52 1
a52 1
/*******************************************************************************
d54 1
a54 1
*******************************************************************************/
d101 2
a102 2
int chop_data_equally(float *data, float *start_value, int num_data,
                      int num_intervals);
d107 1
a107 1
#endif
@


1.5
log
@removed k&r prototypes so that this library can be linked with c++ code.
@
text
@d1 8
a8 4
/* da_prob.h */

#ifndef DA_PROB_HDR
#define DA_PROB_HDR
d11 1
a11 1
static char da_prob_hdr_rcsid[] = "$Id: da_prob.h,v 1.4 1996/09/20 22:13:43 agray Exp agray $";
d13 2
d16 4
a19 1
 * $Log: da_prob.h,v $
d34 18
a51 3
/* constants */

/* function declarations */
d53 1
a53 16
int read_gauss_parms(char *parmsfile, int nc, float **mean, float ***cov);
int print_gauss_parms(FILE* stream, int nc, float *mean, float **cov);
int write_gauss_parms(char *parmsfile, int nc, float *mean, float **cov,
                      char *mode);

int print_gauss_parms_set(FILE *stream, int nc, int K, float **means, 
                          float ***covars);
int write_gauss_parms_set(char *parmsfile, int nc, int K, float **means, 
                          float ***covars, char *mode);
int print_unnorm_gauss_parms_set(FILE *stream, int nc, int K, float **means, 
                                 float ***covars, float *range, float *minval);
int write_unnorm_gauss_parms_set(char *parmsfile, int nc, int K, float **means, 
                                 float ***covars, float *range, float *minval, 
                                 char *mode);

int merf(float *mean, float **cov, float **data, int nr, int nc, float *probs);
d60 36
@


1.4
log
@changed names back.
@
text
@d7 1
a7 1
static char da_prob_hdr_rcsid[] = "$Id: da_prob.h,v 1.3 1996/09/19 22:45:08 agray Exp agray $";
d11 3
a28 2
#ifdef __STDC__

a50 18

#else 

int read_gauss_parms();
int print_gauss_parms();
int write_gauss_parms();

int print_gauss_parms_set();
int write_gauss_parms_set();
int print_unnorm_gauss_parms_set();
int write_unnorm_gauss_parms_set();

int merf();

float prob_gauss();
float* vector_prob_gauss();

#endif
@


1.3
log
@changed name of prob_gauss() to gauss_eval(); similar for vector_prob_gauss().
@
text
@d7 1
a7 1
static char da_prob_hdr_rcsid[] = "$Id: da_prob.h,v 1.2 1996/07/11 18:27:02 agray Exp agray $";
d11 3
d45 1
a45 1
float gauss_eval(float *datum, float *mean, float **covar, int dim, 
d47 1
a47 1
float* vector_gauss_eval(float **data, float *mean, float **covar, int dim, 
@


1.2
log
@added read/print/write_gauss_parms(), print/write_gauss_parms_set(),
print/write_unnorm_gauss_parms_set(), prob_gauss(), vector_prob_gauss().
@
text
@d7 1
a7 1
static char da_prob_hdr_rcsid[] = "$Id: da_prob.h,v 1.1 1996/02/21 05:18:29 agray Exp agray $";
d11 4
d42 1
a42 1
float prob_gauss(float *datum, float *mean, float **covar, int dim, 
d44 1
a44 1
float* vector_prob_gauss(float **data, float *mean, float **covar, int dim, 
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
static char da_prob_hdr_rcsid[] = "$Id$";
d9 5
a13 1
/* $Log$ */
d21 15
d38 6
d46 9
d56 3
@
