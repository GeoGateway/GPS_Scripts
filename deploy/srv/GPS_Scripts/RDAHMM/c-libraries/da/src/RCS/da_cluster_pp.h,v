head	1.6;
access;
symbols;
locks
	granat:1.6; strict;
comment	@ * @;


1.6
date	98.03.09.00.40.54;	author granat;	state Exp;
branches;
next	1.5;

1.5
date	97.01.29.21.29.37;	author agray;	state Exp;
branches;
next	1.4;

1.4
date	96.10.31.02.06.43;	author agray;	state Exp;
branches;
next	1.3;

1.3
date	96.10.31.00.23.46;	author agray;	state Exp;
branches;
next	1.2;

1.2
date	96.07.19.17.53.23;	author agray;	state Exp;
branches;
next	1.1;

1.1
date	96.07.11.16.44.01;	author agray;	state Exp;
branches;
next	;


desc
@Header for da_clust_pp.c.
@


1.6
log
@fixed boolean bug
@
text
@/*******************************************************************************
MODULE HEADER:
da_cluster_pp.h
*******************************************************************************/

#ifndef _DA_CLUSTER_PP_H_
#define _DA_CLUSTER_PP_H_
/* Protects from multiple inclusion. */

#ifndef lint
static char da_cluster_pp_h_rcsid[] = "$Id: da_cluster_pp.h,v 1.5 1997/01/29 21:29:37 agray Exp granat $";
#endif
/* This string variable allows the RCS identification info to be printed. */

/* 
 * $Log: da_cluster_pp.h,v $
 * Revision 1.5  1997/01/29 21:29:37  agray
 * new format.
 *
 * Revision 1.4  1996/10/31 02:06:43  agray
 * renamed from "da_clust_pp" to "da_cluster_pp";
 * changed .h and .c formats throughout library;
 *
 * Revision 1.3  1996/10/31 00:23:46  agray
 * changed naming from "mixmod" to "mixture"; other naming changes.
 *
 * Revision 1.2  1996/07/19 17:53:23  agray
 * added random_means_pp(), started random_means_from_data_pp()
 *
 * Revision 1.1  1996/07/11 16:44:01  agray
 * Initial revision
 *
 * */

/*==============================================================================
Data Structures
==============================================================================*/

/*==============================================================================
Constants, Macros
==============================================================================*/

/*==============================================================================
Variables
==============================================================================*/

/*==============================================================================
Function Declarations
==============================================================================*/

/* k-means clustering */

int k_means_pp(float **data, int numrows, int numcols, float **means, 
              float **initmeans, int *clustsize, int *class, int K,
              int *numiters, int *num_empty_clusters, boolean empty_cluster_ok,
              int pe, int numPE);

/* EM algorithm for mixtures */

float mixture_likelihood_pp(int K, float **means, float ***covars, 
                           float *weights, float **data, float **probs, 
                           float *prob_data, float *sum_probs, int numrows, 
                           int numcols, char *rows_or_cols, float min_diag,
                           int pe, int numPE);
int estimate_mixture_params_pp(int K, float **means, float ***covars, 
                              float *weights, float **data, float **probs, 
                              float *sum_probs, int total_numrows, int numrows, 
                              int numcols, float min_weight, 
                              int *num_empty_clusters, boolean empty_cluster_ok,
                              int pe, int numPE);

/* parameter initialization */

int random_means_pp(float **means, int num_means, int num_cols, int pe);


#endif /* _DA_CLUSTER_PP_H_ */
@


1.5
log
@new format.
@
text
@d11 1
a11 1
static char da_cluster_pp_h_rcsid[] = "$Id: da_cluster_pp.h,v 1.4 1996/10/31 02:06:43 agray Exp agray $";
d17 3
d55 1
a55 1
              int *numiters, int *num_empty_clusters, bool empty_cluster_ok,
d69 1
a69 1
                              int *num_empty_clusters, bool empty_cluster_ok, 
@


1.4
log
@renamed from "da_clust_pp" to "da_cluster_pp";
changed .h and .c formats throughout library;
@
text
@d6 2
a7 2
#ifndef _DA_CLUSTER_PP_H
#define _DA_CLUSTER_PP_H
d11 1
a11 1
static char da_cluster_pp_h_rcsid[] = "$Id: da_cluster_pp.h,v 1.3 1996/10/31 00:23:46 agray Exp agray $";
d17 4
d32 1
a32 1
/*******************************************************************************
d34 1
a34 1
*******************************************************************************/
d36 1
a36 1
/*******************************************************************************
d38 5
a42 1
*******************************************************************************/
d44 1
a44 1
/*******************************************************************************
d46 1
a46 1
*******************************************************************************/
d74 1
a74 1
#endif
@


1.3
log
@changed naming from "mixmod" to "mixture"; other naming changes.
@
text
@d1 8
a8 4
/* da_clust_pp.h */

#ifndef DA_CLUST_PP_HDR
#define DA_CLUST_PP_HDR
d11 1
a11 1
static char da_clust_pp_hdr_rcsid[] = "$Id: da_clust_pp.h,v 1.2 1996/07/19 17:53:23 agray Exp agray $";
d13 2
d16 4
a19 1
 * $Log: da_clust_pp.h,v $
d28 11
a38 1
/* constants */
d40 1
a40 5
/* function declarations */

#ifdef __STDC__

int random_means_pp(float **means, int num_means, int num_cols, int pe);
d47 2
d61 1
a61 1
#else 
d63 1
a63 3
int random_means_pp();

int k_means_pp();
a64 4
float mixture_likelihood_pp();
int estimate_mixture_params_pp();

#endif
@


1.2
log
@added random_means_pp(), started random_means_from_data_pp()
@
text
@d7 1
a7 1
static char da_clust_pp_hdr_rcsid[] = "$Id: da_clust_pp.h,v 1.1 1996/07/11 16:44:01 agray Exp agray $";
d11 3
d27 1
a27 1
int kmeans_pp(float **data, int numrows, int numcols, float **means, 
d32 1
a32 1
float mixmod_likelihood_pp(int K, float **means, float ***covars, 
d37 1
a37 1
int estimate_mixmod_params_pp(int K, float **means, float ***covars, 
d48 1
a48 1
int kmeans_pp();
d50 2
a51 2
float mixmod_likelihood_pp();
int estimate_mixmod_params_pp();
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
static char da_clust_pp_hdr_rcsid[] = "$Id$";
d10 4
a13 1
 * $Log$
d22 2
a33 1

d43 2
a47 1

@
