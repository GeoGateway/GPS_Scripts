head	1.2;
access;
symbols
	NSWC1:1.2;
locks; strict;
comment	@ * @;


1.2
date	95.09.09.01.42.02;	author jctran;	state Exp;
branches;
next	1.1;

1.1
date	95.08.03.23.34.39;	author jctran;	state Exp;
branches;
next	;


desc
@The string module for the libcp, where function may not exist on various
platforms.
JC Tran
@


1.2
log
@Made certain that strdup is defined only once.
JCT
@
text
@/* cp_string.c */

#ifndef lint
static char rcsid[] = "$Id: cp_string.c,v 1.1 1995/08/03 23:34:39 jctran Exp jctran $";
#endif
/* $Log: cp_string.c,v $
 * Revision 1.1  1995/08/03  23:34:39  jctran
 * Initial revision
 * */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "cp_platform.h"
#include "cp_string.h"

/* machine dependant stuff */ 
/****************************************************************************
 *   function:      strdup
 *   description:   This function determines the length of the given string. 
 *                  Then it creates an allocated string buffer of that size. 
 *                  Followed by the copying of the given string into the new
 *                  buffer.  Then it returns the newly created string.
 *   calls:         strlen
 *                  utMalloc
 *                  strcpy
 *   returns:       newly duplicated string.
 ****************************************************************************/
/* issue 2 */
#ifndef strdup
#if (CP_STRDUP_DEFINED == CP_STRDUP_IN_CP_STRING_H)
char *strdup (s)
	char *s;
	{
	char *p=NULL;
													/* +1 for '\0' */
	if ((p = (char *) malloc((unsigned)strlen(s) + 1)) != (char *)NULL)												
		strcpy(p,s);
	return((char *)p);
	} /* strdup */
#endif
#endif
/***** MACUNIXDOS...MACUNIXDOS...MACUNIXDOS *****/
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
static char rcsid[] = "$Id$";
d6 4
a9 1
/* $Log$ */
d21 1
a21 1
 *					Then it creates an allocated string buffer of that size. 
d26 1
a26 1
 *					strcpy
d30 1
d41 1
@
